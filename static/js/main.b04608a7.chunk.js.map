{"version":3,"sources":["components/calendar_toggle.jsx","components/header.jsx","components/text_field.jsx","components/details.jsx","components/due_date.jsx","base.js","components/file_upload.jsx","components/flagg.jsx","components/list_items.jsx","components/todo_title.jsx","utils/local_storage.js","utils/emojis.js","utils/list_functions.js","components/todo_list.jsx","components/filter_menu.jsx","components/clear_data_btn.jsx","components/footer.jsx","components/calendar_view.jsx","components/modal.jsx","components/settings.jsx","App.js","reportWebVitals.js","index.js"],"names":["CalendarToggle","setCalendarViewMode","className","icon","faList","id","class","onChange","n","type","name","value","faCalendar","Header","TextField","addToList","todoList","setTodoList","useState","todo","setTodo","handleSubmit","e","preventDefault","length","alert","placeholder","target","onKeyPress","key","onClick","Details","updateTodoInLocalStorage","details","setDetails","editMode","setEditMode","handleDetailChange","handleDetailSubmit","title","faEdit","onSubmit","DueDate","date","dueDate","changeDueDate","handleDateSelection","newDate","utils","DateFnsUtils","margin","label","format","minDate","Date","KeyboardButtonProps","toLocaleDateString","firebaseConfig","apiKey","process","REACT_APP_AUTH_TOKEN","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","storage","FileUpload","file","attachment","setAttachment","href","attachmentUrl","rel","ref","child","delete","then","url","files","storageRef","put","getDownloadURL","Flagg","forceUpdate","flagged","toggleFlag","defaultChecked","ListItem","TodoTitle","handleRemoval","handleCompletion","changeTitle","done","join","stopPropagation","autofocus","faSave","faCheckSquare","faSquare","faTrash","saveToLocalStorage","data","localStorage","setItem","JSON","stringify","EMOJIS","latestId","reduce","latest","todoItem","newList","removeFromList","todoToDelete","filteredList","filter","TodoList","React","element","document","getElementById","classList","add","remove","Math","floor","random","Accordion","map","Card","Toggle","as","eventKey","Collapse","Body","FilterMenu","setFilteredList","selected","setSelected","handleColorSelection","selectionId","currentSelection","filterByInc","filterByDone","ClearData","faTrashAlt","window","confirm","removeItem","PROFILES","faLinkedin","faGithubSquare","faUserCircle","Footer","profile","color","CalendarView","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","headerToolbar","left","center","right","initialView","allDayContent","eventClick","jsEvent","cancelBubble","events","Modal","ContentComponent","display","toggleDisplay","handleToggle","faCogs","showHideClassName","modal","Settings","getItem","bgColor","setBGColor","stickyTitle","setStickyTitle","useEffect","style","backgroundColor","textContent","defaultValue","App","todoItems","parsedJSON","parse","Array","isArray","fetchFromLocalStorage","calendarViewMode","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b04608a7.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendar, faList } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction CalendarToggle({ setCalendarViewMode }) {\n    return (\n        <div className=\"calendar-toggle-container\">\n            <FontAwesomeIcon icon={faList} id=\"list-icon\" />\n            <div className=\"flagg-container\">\n                <label class=\"label\" >\n                    <div class=\"toggle\">\n                        <input \n                            onChange={() => setCalendarViewMode(n => !n)} \n                            class=\"toggle-state\" \n                            type=\"checkbox\" \n                            name=\"check\" \n                            value=\"check\" \n                        />\n                        <div class=\"indicator\"></div>\n                    </div>\n                </label>\n            </div>\n            <FontAwesomeIcon icon={faCalendar} id=\"calendar-icon\" />\n        </div>\n\n    );\n}\n\nexport default CalendarToggle;","import CalendarToggle from \"./calendar_toggle\";\n\nfunction Header({setCalendarViewMode}) {\n    return (\n        <div className=\"header-container\">\n            <div className=\"header\">\n                <h1 id=\"sticky-title\">QuickList</h1>\n            </div>\n            <div id=\"calendar-toggle-container\">\n                <CalendarToggle setCalendarViewMode={setCalendarViewMode}/>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React, { useState } from 'react'\n\nfunction TextField({ addToList, todoList, setTodoList}) {\n    const [todo, setTodo] = useState('');\n    const handleChange = e => { setTodo(e.target.value) };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(todo.length > 0 && todo.length <= 50) {\n            addToList({todo, todoList, setTodoList});\n            setTodo(\"\");\n        } else {\n            alert(\"Todo has to be between 1 to 50 characters long!\");\n        }\n    }\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSubmit(e);\n        }\n    }\n\n    return (\n        <div className=\"text-field-container\">\n            <input \n                name=\"title\"\n                type=\"text\" \n                placeholder=\"i.e. get milk\" \n                id=\"text-input\"\n                onChange={handleChange} \n                value={todo}\n                onKeyPress={handleKeyPress}\n            />\n            <button id=\"text-field-btn\" onClick={handleSubmit}>Add</button>\n        </div>\n    )}\n\nexport default TextField;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\n\nfunction Details ({ todo, updateTodoInLocalStorage }) {\n\n    const [details, setDetails] = useState(todo.details ? todo.details : \"\");\n    const [editMode, setEditMode] = useState(false);\n\n    const handleDetailChange = (e) => { setDetails(e.target.value) }\n\n    const handleDetailSubmit = (e) => {\n        e.preventDefault();\n        todo.details = details;\n        setEditMode(false);\n        updateTodoInLocalStorage();\n    }\n\n    const detailsForm = () => {\n        return (\n            <form onSubmit={handleDetailSubmit}>\n                <textarea value={details} onChange={handleDetailChange} \n                    placeholder=\"add a description\"/>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        );\n    }\n\n    return (\n        <div className=\"item-detail-container\" >\n            <div className=\"item-detail-header\">\n                <h2 className=\"details-h2\">Discription</h2>\n                <div title=\"Edit Discription\" id=\"edit-icon-container\" onClick={() => setEditMode(!editMode)}><FontAwesomeIcon id=\"edit-icon\" icon={faEdit} /></div>\n            </div>\n            { editMode ? detailsForm() : (todo.details ? <p onClick={() => setEditMode(!editMode)}>{todo.details}</p> : <div id=\"add-description-text\" onClick={() => setEditMode(!editMode)}><p>Click to add a description</p></div>) }\n        </div>\n    )\n}\n\nexport default Details;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDateTimePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n \n\nfunction DueDate({ todo, updateTodoInLocalStorage }) {\n    const [editMode, setEditMode] = useState(false);\n    const [dueDate, changeDueDate] = useState(todo.date);\n\n    const handleDateSelection = (newDate) => {\n        changeDueDate(newDate);\n        setEditMode(!editMode);\n        todo.date = newDate;\n        updateTodoInLocalStorage();\n    }\n\n    const dateSelection = () => {\n        return (\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                    margin=\"normal\"\n                    id=\"date-picker-dialog\"\n                    label=\"Select a due date\"\n                    format=\"MM/dd/yyyy\"\n                    value={dueDate}\n                    onChange={handleDateSelection}\n                    minDate={new Date()}\n                    KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                    }}\n                />\n            </MuiPickersUtilsProvider>\n        )\n    }\n\n\n    return (\n        <div className=\"item-due-date-container\" >\n            <div className=\"item-due-date-header\">\n                <h2 className=\"details-h2\">Due Date</h2>\n                <div title=\"Edit Due Date\" id=\"edit-icon-container\" onClick={() => setEditMode(!editMode)}><FontAwesomeIcon id=\"edit-icon\" icon={faEdit} /></div>\n            </div>\n            <div className=\"due-date-container\">\n                {\n                    editMode ? dateSelection() : (dueDate ? <p onClick={() => setEditMode(!editMode)}>{new Date(dueDate).toLocaleDateString('en-US')}</p> : \n                        <div id=\"add-due-date-text\" onClick={() => setEditMode(!editMode)}><p>Click to add a due date</p></div>)\n                }\n            </div>\n\n            \n        </div>\n    )\n}\n\nexport default DueDate;\n","import firebase from 'firebase/app';\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_AUTH_TOKEN,\n    authDomain: \"todoapp-b01b7.firebaseapp.com\",\n    projectId: \"todoapp-b01b7\",\n    storageBucket: \"todoapp-b01b7.appspot.com\",\n    messagingSenderId: \"231109706452\",\n    appId: \"1:231109706452:web:5bbd249c3c2c16ce24b141\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// Get a reference to the storage service, which is used to create references in your storage bucket\nexport const storage = firebase.storage();","import React, { useState } from 'react';\nimport { storage } from '../base';\n\nfunction FileUpload({ todo, updateTodoInLocalStorage}) {\n\n    const [attachment, setAttachment] = useState(todo.file);\n\n    const handleUpload = (e) => {\n        const file = e.target.files[0];\n        const storageRef = storage.ref()\n        const fileRef = storageRef.child(file.name);\n        fileRef.put(file).then(() => {\n            storageRef.child(file.name).getDownloadURL()\n                .then((url) => {\n                    todo.attachmentUrl = url;\n                    todo.file = file.name;\n                    setAttachment(todo.file)\n                    updateTodoInLocalStorage();\n                })\n            })\n        }\n\n    const handleDelete = () => {\n        const storageRef = storage.ref()\n        const fileRef = storageRef.child(todo.file);\n        fileRef.delete().then(() => {\n            todo.url = \"\";\n            todo.file = \"\";\n            setAttachment(null);\n            updateTodoInLocalStorage();\n        })\n    }\n\n    return (\n        <div className=\"file-upload-container\">\n            <h2 className=\"details-h2\">Attachments</h2>\n            { attachment ? (\n                <div className=\"attachment-container\">\n                    <a href={todo.attachmentUrl} target=\"_blank\" rel=\"noreferrer\" >{attachment}</a>\n                    <p onClick={handleDelete} id=\"cross-mark\">&#10060;</p>\n                </div>\n            \n            ) : <input type=\"file\" onChange={handleUpload} /> }\n        </div>\n        \n    );\n}\n\nexport default FileUpload;","import React, { useState } from 'react';\n\nfunction Flagg({ todo, updateTodoInLocalStorage, forceUpdate }) {\n    const [flagged, toggleFlag] = useState(todo.flagged);\n\n    const handleChange = () => {\n        todo.flagged = !flagged;\n        toggleFlag(!flagged);\n        updateTodoInLocalStorage();\n        forceUpdate(n => !n);\n    }\n\n    return (\n        <div className=\"flagg-container\">\n            <h2 className=\"details-h2\">Priority</h2>\n            <label class=\"label\" >\n                <div class=\"toggle\">\n                    <input onChange={handleChange} defaultChecked={flagged} class=\"toggle-state\" type=\"checkbox\" name=\"check\" value=\"check\" />\n                    <div class=\"indicator\"></div>\n                </div>\n            </label>\n        </div>\n\n    );\n}\n\nexport default Flagg;","import React from 'react';\nimport Details from './details';\nimport DueDate from './due_date';\nimport FileUpload from './file_upload';\nimport Flagg from './flagg';\n\nfunction ListItem({ todo, updateTodoInLocalStorage, forceUpdate}) {\n\n    return (\n        <div className=\"item-container\">\n            <div className=\"item-left-container\" >\n                <Details updateTodoInLocalStorage={updateTodoInLocalStorage} todo={todo}/>\n                <DueDate updateTodoInLocalStorage={updateTodoInLocalStorage} todo={todo} />\n            </div> \n            <div className=\"item-right-container\" >\n                <FileUpload updateTodoInLocalStorage={updateTodoInLocalStorage} todo={todo} /> \n                <Flagg updateTodoInLocalStorage={updateTodoInLocalStorage} forceUpdate={forceUpdate} todo={todo}/>\n            </div>     \n        </div>\n    )\n}\n\nexport default ListItem;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faCheckSquare, faSave } from '@fortawesome/free-solid-svg-icons';\nimport { faSquare } from '@fortawesome/free-regular-svg-icons';\n\nfunction TodoTitle({ todo, handleRemoval, handleCompletion, updateTodoInLocalStorage, forceUpdate}) {\n\n    const [title, changeTitle] = useState(todo.title)\n    const [editMode, setEditMode] = useState(false);\n\n    const handleChange = e => { changeTitle(e.target.value) };\n\n    const displayIcons = () => {\n        return (\n            <div className=\"item-icons-container\">\n                <div>{todo.done ? <FontAwesomeIcon icon={faCheckSquare} onClick={(e) => handleCompletion(e, todo)} /> :\n                    <FontAwesomeIcon icon={faSquare} onClick={(e) => handleCompletion(e, todo)} />}</div>\n                <div><FontAwesomeIcon icon={faTrash} onClick={(e) => handleRemoval(e, todo)} /></div>\n            </div>\n        )\n    }\n\n    const handleTitleClick = (e) => {\n        e.stopPropagation();\n        setEditMode(!editMode)\n    };\n\n    const handleSubmit = (e) => {\n        e.stopPropagation();\n        todo.title = title; \n        changeTitle(title)\n        setEditMode(false);\n        updateTodoInLocalStorage();\n        forceUpdate(n => !n);\n\n    }\n\n\n\n    return (\n        <div \n            id={`todo#${todo.id}`}\n            className={[\"todo-title-container\", todo.done ? \"strikethrough\" : \"\"].join(\" \")}\n            >\n            { editMode ? (\n                <div class=\"todo-title-input-container\">\n                    <input\n                        onClick={e => e.stopPropagation()}\n                        type=\"text\"\n                        value={title}\n                        onChange={handleChange}\n                        autofocus\n                        id=\"title-input\"\n                    /> \n                    <button id=\"title-field-btn\" onClick={handleSubmit}><FontAwesomeIcon icon={faSave} id=\"save-icon\"/></button>\n                </div>\n                \n                \n            ) : <p id=\"todo-title\" onClick={handleTitleClick} >{todo.title}</p>}\n            {displayIcons()}\n        </div>\n    );\n}\n\nexport default TodoTitle;\n","// save all tasks to local storage \nexport const saveToLocalStorage = (key, data) => {\n    localStorage.setItem(key, (typeof data === 'string') ? data : JSON.stringify(data))\n    \n};\n\n// fetch all tasks from local storage\nexport const fetchFromLocalStorage = key => {\n    let todoItems = [];\n    const value = localStorage.getItem(key); \n\n    // if fetch was able to retrive data \n    if (value) {\n        const parsedJSON = JSON.parse(value);\n        if (Array.isArray(parsedJSON)) { todoItems = parsedJSON }\n    } \n    return todoItems;\n};\n\n// clear data in local storage \nexport const clearLocalStorage = key => localStorage.removeItem(key);","export const EMOJIS = [\n    \"ヽ( T-T)ノ\",\n    \"o(╥﹏╥)o\",\n    \"(ㄒoㄒ)\",\n    \"(╯︵╰,)\",\n    \"(oT-T)尸\",\n    \"(⋟﹏⋞)\",\n    \"〒_〒\",\n    \"( ˃̣̣̥o˂̣̣̥ )\",\n    \"(´;ω;)\",\n    \"(T⌓T)\",\n    \"(Ｔ▽Ｔ)\",\n    \"Ó╭╮Ò\",\n    \"(´。＿。｀)\",\n    \"（┬┬＿┬┬）\"\n];","import { saveToLocalStorage } from \"./local_storage\"\nimport { storage } from '../base';\nimport { EMOJIS } from \"./emojis\";\n\nexport const addToList = ({ todo, todoList, setTodoList}) => {\n    let latestId = 0;\n    // gets the latest id from our list in state. \n    if (todoList.length === 1) {\n        latestId = 1;\n    } else if (todoList.length > 1) {\n        latestId = todoList.reduce((latest, todo) => {\n            if (latest > todo.id) {\n                return latest;\n            } else {\n                return todo.id;\n            }\n        })\n    }\n\n    // nomalizing our new todo\n    const todoItem = {\n        id: latestId + 1,\n        title: todo,\n    }\n\n    const newList = [...todoList, todoItem];\n    setTodoList(newList)\n\n    // saving to local storage\n    saveToLocalStorage(\"todo_list\", newList);\n}\n\nexport const removeFromList = (todoToDelete, { todoList, setTodoList, }) => {\n    const filteredList = todoList.filter(todo => todo.id !== todoToDelete.id);\n    setTodoList(filteredList);\n    saveToLocalStorage(\"todo_list\", filteredList);\n    if (todoToDelete.file) {\n        // delete attachment from Storage \n        const storageRef = storage.ref()\n        const fileRef = storageRef.child(todoToDelete.file);\n        fileRef.delete().then(() => {\n            setTodoList(filteredList);\n            saveToLocalStorage(\"todo_list\", filteredList);\n        })\n    } \n}\n\nexport const filterByDone = ({ todoList, setFilteredList}) => {\n    const filteredList = todoList.filter( todo => todo.done );\n    setFilteredList(filteredList);\n}\n\nexport const filterByInc = ({ todoList, setFilteredList }) => {\n    const filteredList = todoList.filter(todo => !todo.done);\n    setFilteredList(filteredList);\n}\n\nexport const randomSelectEmoji = () => {\n    return EMOJIS[Math.floor(Math.random() * EMOJIS.length)]\n}","import React from 'react';\nimport ListItem from \"./list_items\";\nimport TodoTitle from \"./todo_title\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { randomSelectEmoji } from \"../utils/list_functions\";\n\nfunction TodoList({ todoList, removeFromList, setTodoList, updateTodoInLocalStorage }) {\n    const [, forceUpdate] = React.useState(true);\n\n    const handleCompletion = (e, todo) => {\n        e.stopPropagation();\n        todo.done = !todo.done;\n\n        let element = document.getElementById(`todo#${todo.id}`);\n        if (todo.done) {\n            element.classList.add(\"strikethrough\")\n        } else {\n            element.classList.remove(\"strikethrough\")\n        }\n        updateTodoInLocalStorage();\n\n        // rerenders which Icon is showing for status.\n        forceUpdate(n => !n);\n    };\n\n    const handleRemoval = (e, todo) => {\n        e.stopPropagation(); // disable bubble up effect on your element clicks\n        removeFromList(todo, { setTodoList, todoList })\n    };\n\n    const displayAccordian = () => (\n        <Accordion>\n            {\n                todoList.map((todo, key) => (\n                    <Card>\n                        <Accordion.Toggle \n                            as={Card.Header} \n                            eventKey={key + 1} \n                            className={todo.flagged ? \"flagged\" : \"\"}\n                        >\n                            <TodoTitle \n                                todo={todo} \n                                handleCompletion={handleCompletion} \n                                handleRemoval={handleRemoval} \n                                updateTodoInLocalStorage={updateTodoInLocalStorage} \n                                forceUpdate={forceUpdate}\n                            />\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey={key + 1}>\n                            <Card.Body>\n                                <ListItem\n                                    todo={todo}\n                                    updateTodoInLocalStorage={updateTodoInLocalStorage}\n                                    forceUpdate={forceUpdate}\n                                />\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                ))\n            }\n        </Accordion> \n    )\n\n\n    return (\n        <div className=\"data-container\">\n            { todoList.length === 0 ? (\n                <div className=\"emoji-container\">\n                    <div id=\"emoji\">{randomSelectEmoji()}</div>\n                    <p>No Task's Found</p>\n                </div>\n            ) : displayAccordian() } \n        </div>\n    )\n}\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport { filterByDone, filterByInc } from '../utils/list_functions';\n\nfunction FilterMenu({ todoList, setFilteredList}) {\n\n    const [selected, setSelected] = useState(\"All\");\n\n    const handleColorSelection = (selectionId) => {\n        let currentSelection = document.getElementById(selectionId);\n        if (selected !== selectionId) {\n            const prevSelected = document.getElementById(selected);\n            prevSelected.classList.remove(\"selected\")\n            setSelected(selectionId);\n            currentSelection.classList.add(\"selected\")\n        } \n    }\n    const handleAll = () => {\n        handleColorSelection(\"All\")\n        setFilteredList(false)\n    }\n\n    const handleIncomplete = () => {\n        handleColorSelection(\"Incomplete\")\n        filterByInc({ todoList, setFilteredList })\n    }\n\n    const handleCompleted = () => {\n        handleColorSelection(\"Completed\")\n        filterByDone({ todoList, setFilteredList})\n    }\n\n    return (\n        <ul className=\"filter-menu\">\n            <li onClick={handleAll} id=\"All\" className=\"selected\">All Tasks</li>\n            <li onClick={handleIncomplete} id=\"Incomplete\">Incomplete</li>\n            <li onClick={handleCompleted} id=\"Completed\">Completed</li>\n        </ul>\n    );\n}\n\nexport default FilterMenu;\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { clearLocalStorage } from \"../utils/local_storage\";\n\nfunction ClearData({setTodoList}) {\n\n    const handleClearClick = () => {\n        if (window.confirm('Are you sure you wish to delete ALL of your tasks?!')) {\n            setTodoList([]);\n            clearLocalStorage(\"todo_list\");\n        }\n    }\n\n    return (\n        <div className=\"clear-data-container\">\n            <FontAwesomeIcon id=\"clear-data-btn\" icon={faTrashAlt} onClick={handleClearClick} />\n        </div>\n    );\n}\n\nexport default ClearData;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faLinkedin,\n    faGithubSquare,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport {\n    faUserCircle\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst PROFILES = [\n    {\n        url: \"https://www.linkedin.com/in/mahmud-ahmed/\",\n        icon: faLinkedin\n    },\n    {\n        url: \"https://www.github.com/mahmudahmed\",\n        icon: faGithubSquare\n    },\n    {\n        url: \"https://mahmudahmed.com\",\n        icon: faUserCircle\n    }\n]\nexport const Footer = () => {\n\n\n    return (\n        <footer id=\"footer\">\n            <div className=\"footer-icons-container\">\n                {\n                    PROFILES.map(profile => {\n                        return (\n                            <div>\n                                <a\n                                    href={profile.url}\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                >\n                                    <FontAwesomeIcon\n                                        icon={profile.icon}\n                                        color=\"white\"\n                                        className=\"footer-icon\"\n                                    />\n                                </a>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <p>Designed & Coded by <span id=\"author-signature\">Mahmud Ahmed</span></p>\n        </footer>\n    );\n}\n","import React from \"react\";\nimport FullCalendar  from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\n\n\nfunction CalendarView({ todoList }) {\n\n    const handleEventClick = (e) => {\n        e.jsEvent.cancelBubble = true;\n        e.jsEvent.preventDefault();\n    }\n\n    return (\n        <div className=\"calendar-container\">\n        \n            <FullCalendar\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                headerToolbar={{\n                    left: 'prev,next today',\n                    center: 'title',\n                    right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                }}\n                initialView='dayGridMonth'\n                allDayContent={false}\n                eventClick={handleEventClick}\n                events={todoList}\n            />\n        </div>\n    );\n}\n\nexport default CalendarView;\n","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCogs } from '@fortawesome/free-solid-svg-icons';\n\n\nfunction Modal({ContentComponent}) {\n  const [display, toggleDisplay] = useState(false);\n\n  const handleToggle = () => {\n    toggleDisplay(n => !n)\n  };\n\n  const modal = () => {\n    const showHideClassName = display ? \"modal-background display-block\" : \"modal-background display-none\";\n    return (\n      <div className={showHideClassName}>\n      <section className=\"modal-content\">\n          <ContentComponent />\n          <button id=\"modal-close-btn\" type=\"button\" onClick={handleToggle}>Done</button>\n      </section>\n    </div>\n    )\n  }\n\n  return (\n    <div className=\"modal-container\">\n      <button onClick={handleToggle}><FontAwesomeIcon icon={faCogs} id=\"settings-icon\"/></button>\n        { modal() }\n    </div>\n  );\n}\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react'\nimport ColorPicker from 'material-ui-color-picker'\nimport { saveToLocalStorage } from '../utils/local_storage';\n\n\nfunction Settings() {\n\n  const [bgColor, setBGColor] = useState(localStorage.getItem(\"bgColor\") || \"#c0e218\");\n  const [stickyTitle, setStickyTitle] = useState(localStorage.getItem(\"stickyTitle\") || \"QuickList\");\n\n\n  // componentDidMount\n  useEffect(() => {\n    document.getElementById(`app`).style.backgroundColor = bgColor;\n    document.getElementById(\"sticky-title\").textContent = stickyTitle;\n  }, []);\n\n  const handleBGColor = (color) => {\n    let element = document.getElementById(`app`);\n    setBGColor(color);\n    element.style.backgroundColor = color;\n    saveToLocalStorage(\"bgColor\", color);\n  }\n\n  const handleReset = () => {\n    let element = document.getElementById(`app`);\n    setBGColor(\"#c0e218\");\n    setStickyTitle(\"QuickList\");\n    element.style.backgroundColor = \"#c0e218\";\n    document.getElementById(\"sticky-title\").textContent = \"QuickList\"\n    saveToLocalStorage(\"bgColor\", \"#c0e218\");\n    saveToLocalStorage(\"stickyTitle\", \"QuickList\");\n  }\n\n  const handleTitleChange = (e) => {\n    setStickyTitle(e.target.value);\n    document.getElementById(\"sticky-title\").textContent = e.target.value\n    saveToLocalStorage(\"stickyTitle\", e.target.value);\n  }\n\n  return (\n    <div className=\"settings-container\">\n      <div className=\"settings-title-container\">\n        <h2 className=\"details-h2\">Sticky Title:</h2>\n        <input id=\"sticky-title-input\" type=\"text\" value={stickyTitle} onChange={handleTitleChange} />\n      </div>\n      <div className=\"color-picker-container\">\n        <h2 className=\"details-h2\">Sticky Color:</h2>\n        <ColorPicker\n          name='color'\n          defaultValue=\"#00000\"\n          value={bgColor}\n          onChange={handleBGColor}\n        />\n      </div>\n      <button id=\"default-settings-btn\" onClick={handleReset}>Default Settings</button>\n    </div>\n  );\n}\n\nexport default Settings;\n","import React, { useState, useEffect } from 'react';\nimport './stylesheets/reset.css';\nimport './stylesheets/app.css';\nimport Header from \"./components/header\";\nimport TextField from \"./components/text_field\";\nimport TodoList from \"./components/todo_list\";\nimport FilterMenu from \"./components/filter_menu\";\nimport ClearData from \"./components/clear_data_btn\";\nimport { Footer } from \"./components/footer\";\nimport { saveToLocalStorage, fetchFromLocalStorage } from \"./utils/local_storage\"\nimport { addToList, removeFromList } from \"./utils/list_functions\";\nimport CalendarView from \"./components/calendar_view\";\nimport Modal from \"./components/modal\";\nimport Settings from \"./components/settings\";\n\nfunction App() {\n  const [todoList, setTodoList] = useState(fetchFromLocalStorage(\"todo_list\"));\n  const [filteredList, setFilteredList] = useState(false);\n  const [calendarViewMode, setCalendarViewMode] = useState(false);\n\n  // componentDidMount - If there is a backgorund color found in local storage, sets background color of .app \n  useEffect(() => {\n    const color = localStorage.getItem(\"bgColor\");\n    if (color) {\n      let element = document.getElementById(`app`);\n      element.style.backgroundColor = color;\n      console.log(\"color:\", element.style.backgroundColor)\n    }\n  }, []);\n\n\n  const updateTodoInLocalStorage = () => {\n    saveToLocalStorage(\"todo_list\", todoList);\n  }\n\n  const displayListView = () => {\n    return (\n      <>\n        <TextField\n          addToList={addToList}\n          todoList={todoList}\n          setTodoList={setTodoList}\n        />\n        <FilterMenu\n          todoList={todoList}\n          setFilteredList={setFilteredList}\n        />\n        <TodoList\n          todoList={filteredList ? filteredList : todoList}\n          setTodoList={setTodoList}\n          removeFromList={removeFromList}\n          updateTodoInLocalStorage={updateTodoInLocalStorage}\n        />\n      </>\n    )\n  }\n\n  return (\n    <div className=\"app-container fill-window\">\n      <div className=\"app\" id=\"app\"> \n        \n        <Header setCalendarViewMode={setCalendarViewMode} />\n        <div className=\"view-container\">\n          {calendarViewMode ? <CalendarView todoList={todoList} /> : displayListView()}\n        </div>\n        <Footer />\n        <ClearData setTodoList={setTodoList}/>\n        <Modal ContentComponent={Settings} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nrequire('dotenv').config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}